///
/// Mixin for creating a triangle shape with CSS.
///
/// @link https://engageinteractive.co.uk/blog/top-10-scss-mixins 10 Sass (SCSS) mixins you should be using in your projects: No. 4
///
/// @group Shapes
///
/// @param {Color} $color [currentColor] - Color of the triangle
/// @param {String} $direction [right] - Direction the triangle is to point
/// @param {Length} $size [1em] - Size of the triangle's primary axis
/// @param {Length} $secondary-axis-size [false] - Size of the triangle's secondary axis
/// @param {Boolean} $display [false] - The code needs to be applied to a block-type element in order properly set dimensions. This argument can optionally add the necessary property.
///
@mixin css-triangle(
	$color: currentColor,
	$direction: "right",
	$size: 1em,
	$secondary-axis-size: false,
	$display: false
) {
	@if not $secondary-axis-size {
		$secondary-axis-size: $size;
	}

	@if $direction == "down" {
		border-left: $secondary-axis-size solid transparent;
		border-right: $secondary-axis-size solid transparent;
		border-top: $size solid $color;
	} @else if $direction == "up" {
		border-bottom: $size solid $color;
		border-left: $secondary-axis-size solid transparent;
		border-right: $secondary-axis-size solid transparent;
	} @else if $direction == "right" {
		border-bottom: $secondary-axis-size solid transparent;
		border-left: $size solid $color;
		border-top: $secondary-axis-size solid transparent;
	} @else if $direction == "left" {
		border-bottom: $secondary-axis-size solid transparent;
		border-right: $size solid $color;
		border-top: $secondary-axis-size solid transparent;
	}

	@if $display {
		display: $display;
	}

	height: 0;
	width: 0;
}
